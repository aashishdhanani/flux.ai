name: Test Application and Extension

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      # Add any environment variables your app needs
      MONGODB_URI: mongodb://localhost:27017/test
      JWT_SECRET: test_secret

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: [6.0]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install
          cd ..

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Build client
        run: |
          cd client
          npm run build
          cd ..

      - name: Build extension
        run: |
          cd extension
          # Add build steps if needed
          cd ..

      - name: Run tests
        run: npm test

      - name: Run extension tests
        run: npm run test:extension

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install
          cd ..
          
      - name: Run ESLint
        run: |
          cd client && npm run lint
          cd ../server && npm run lint

  build-extension:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          
      - name: Build extension
        run: |
          cd extension
          # Add your extension build steps here
          # Example: zip -r ../extension.zip *
          
      - name: Upload extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: chrome-extension
          path: extension.zip
          retention-days: 5